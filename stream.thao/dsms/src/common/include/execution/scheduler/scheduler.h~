#ifndef _SCHEDULER_
#define _SCHEDULER_

#ifndef _OPERATOR_
#include "execution/operators/operator.h"
#endif

// Response Time Calculation By Lory Al Moakar
#ifndef _TIMER_
#include "execution/monitors/timer.h"
#endif
//end of part 1 of response time calculation by LAM

//load manager, by Thao Pham
#ifndef _LOAD_MGR_
#include "execution/loadmanager/load_mgr.h"
#endif

#ifndef _CONSTANTS_
#include "common/constants.h"
#endif
//end of part 1 of load mamaging, by Thao Pham

namespace Execution {
	class Scheduler {
	public:
		/**
		 * Add a new operator to schedule
		 */
		virtual int addOperator (Operator *op) = 0;
		
		/**
		 * Schedule the operators for a prescribed set of time units.
		 */		
		virtual int run(long long int numTimeUnits) = 0;
		
		virtual int stop () = 0;
		virtual int resume () = 0;
		
		// Response Time Calculation By Lory Al Moakar
		// A variable used to store the time the scheduler
		// started executing
		unsigned long long int startingTime;

		// a variable used to store the length of 
		// a time unit
		int time_unit;
		//end of part 2 of response time calculation by LAM
		
		//Load manager, by Thao Pham
		LoadManager* loadMgr;
		//for the control-based load shedder
		long long unsigned int ctrl_last_ts;
		
		//end of part 2 of load manager, by Thao Pham
	};
}

#endif
